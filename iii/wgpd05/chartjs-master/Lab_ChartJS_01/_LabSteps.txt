Lab: 以 Chart.js 繪製長條圖




1.  安裝 / 引用 Chart.js


1.1 在本資料夾建立一個新的 HTML 文件，檔名: lab.html，內容如下:

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Lab</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>

</head>
<body>

<div class="container">
    <div class="page-header">
        <h1>Chart.js Lab</h1>
    </div>    
    <div class="row">
        <div class="col-sm-6">
            <!-- 統計圖畫在這裡 -->
            
        </div>
    </div>
</div>


<script>

$(document).ready(function () {

    var cityPopulationList     = [ 3800, 2570, 2374, 2106, 1859];
    var cityPopulationList2030 = [ 3719, 3606, 3075, 2344, 1988];

    var cityNameList = [ "Tokyo", "Delhi", "Shanghai", "Sao Paulo", "New York"];

    // Lab 練習的程式寫在這裡





})

</script>
            
</body>
</html>


1.2 在 </head> 前一行，加入下列內容以引用 Chart.js 函式庫:

    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0/dist/Chart.min.js"></script>




2.  繪製長條圖


2.1 找到「<!-- 統計圖畫在這裡 -->」，
    加入 canvas 元素，如下:

    <canvas id="chartCanvas"></canvas>


2.2 找到「// Lab 練習的程式寫在這裡」，加入下列程式:

    var ctx = document.getElementById("chartCanvas");
    var populationChart = new Chart(ctx, {
        type: "bar",
        data: {
            labels: cityNameList,  // X 軸項目清單
            datasets: [
                {
                    label: "population",
                    data: cityPopulationList,
                    // 著色:
                }
            ]
        }
    })
    

2.3 在瀏覽器檢視目前進度


2.4 找到「// 著色:」，加入下列程式:

                    backgroundColor: "rgba(14,72,100,0.2)",
                    borderColor: "rgba(14,72,100,1.0)",
                    borderWidth: 1


2.5 在瀏覽器檢視目前進度




3.  在長條圖加入另一個 series


3.1 繼續在 datasets 的陣列加入另一個物件（範例程式如下），
    描繪各城市 2030 年的預估人口。

                {
                    label: "2030 population",
                    data: cityPopulationList2030,
                    // 著色:
                    backgroundColor: "rgba(255,99,132,0.2)",
                    borderColor: "rgba(255,99,132,1.0)",
                    borderWidth: 1
                }


3.2 在瀏覽器檢視目前進度




<Note> 完整的 <script> 程式如下:

<script>

$(document).ready(function () {

    var cityPopulationList     = [ 3800, 2570, 2374, 2106, 1859];
    var cityPopulationList2030 = [ 3719, 3606, 3075, 2344, 1988];

    var cityNameList = [ "Tokyo", "Delhi", "Shanghai", "Sao Paulo", "New York"];

    // Lab 練習的程式寫在這裡

    var ctx = document.getElementById("chartCanvas");
    var populationChart = new Chart(ctx, {
        type: "bar",
        data: {
            labels: cityNameList,  // X 軸項目清單
            datasets: [
                {
                    label: "population",
                    data: cityPopulationList,
                    // 著色:
                    backgroundColor: "rgba(14,72,100,0.2)",
                    borderColor: "rgba(14,72,100,1.0)",
                    borderWidth: 1
                },
                {
                    label: "2030 population",
                    data: cityPopulationList2030,
                    // 著色:
                    backgroundColor: "rgba(255,99,132,0.2)",
                    borderColor: "rgba(255,99,132,1.0)",
                    borderWidth: 1
                }
            ]
        }
    })



})

</script>

